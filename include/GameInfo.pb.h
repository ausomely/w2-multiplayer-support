// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameInfo.proto

#ifndef PROTOBUF_INCLUDED_GameInfo_2eproto
#define PROTOBUF_INCLUDED_GameInfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GameInfo_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_GameInfo_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_GameInfo_2eproto();
namespace GameInfo {
class PlayerCommandRequest;
class PlayerCommandRequestDefaultTypeInternal;
extern PlayerCommandRequestDefaultTypeInternal _PlayerCommandRequest_default_instance_;
class PlayerCommandRequest_CPixelPosition;
class PlayerCommandRequest_CPixelPositionDefaultTypeInternal;
extern PlayerCommandRequest_CPixelPositionDefaultTypeInternal _PlayerCommandRequest_CPixelPosition_default_instance_;
}  // namespace GameInfo
namespace google {
namespace protobuf {
template<> ::GameInfo::PlayerCommandRequest* Arena::CreateMaybeMessage<::GameInfo::PlayerCommandRequest>(Arena*);
template<> ::GameInfo::PlayerCommandRequest_CPixelPosition* Arena::CreateMaybeMessage<::GameInfo::PlayerCommandRequest_CPixelPosition>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace GameInfo {

// ===================================================================

class PlayerCommandRequest_CPixelPosition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameInfo.PlayerCommandRequest.CPixelPosition) */ {
 public:
  PlayerCommandRequest_CPixelPosition();
  virtual ~PlayerCommandRequest_CPixelPosition();

  PlayerCommandRequest_CPixelPosition(const PlayerCommandRequest_CPixelPosition& from);

  inline PlayerCommandRequest_CPixelPosition& operator=(const PlayerCommandRequest_CPixelPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCommandRequest_CPixelPosition(PlayerCommandRequest_CPixelPosition&& from) noexcept
    : PlayerCommandRequest_CPixelPosition() {
    *this = ::std::move(from);
  }

  inline PlayerCommandRequest_CPixelPosition& operator=(PlayerCommandRequest_CPixelPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCommandRequest_CPixelPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCommandRequest_CPixelPosition* internal_default_instance() {
    return reinterpret_cast<const PlayerCommandRequest_CPixelPosition*>(
               &_PlayerCommandRequest_CPixelPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PlayerCommandRequest_CPixelPosition* other);
  friend void swap(PlayerCommandRequest_CPixelPosition& a, PlayerCommandRequest_CPixelPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCommandRequest_CPixelPosition* New() const final {
    return CreateMaybeMessage<PlayerCommandRequest_CPixelPosition>(nullptr);
  }

  PlayerCommandRequest_CPixelPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCommandRequest_CPixelPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCommandRequest_CPixelPosition& from);
  void MergeFrom(const PlayerCommandRequest_CPixelPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCommandRequest_CPixelPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 DX = 1;
  bool has_dx() const;
  void clear_dx();
  static const int kDXFieldNumber = 1;
  ::google::protobuf::int32 dx() const;
  void set_dx(::google::protobuf::int32 value);

  // required int32 DY = 2;
  bool has_dy() const;
  void clear_dy();
  static const int kDYFieldNumber = 2;
  ::google::protobuf::int32 dy() const;
  void set_dy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameInfo.PlayerCommandRequest.CPixelPosition)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dx_;
  ::google::protobuf::int32 dy_;
  friend struct ::TableStruct_GameInfo_2eproto;
};
// -------------------------------------------------------------------

class PlayerCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameInfo.PlayerCommandRequest) */ {
 public:
  PlayerCommandRequest();
  virtual ~PlayerCommandRequest();

  PlayerCommandRequest(const PlayerCommandRequest& from);

  inline PlayerCommandRequest& operator=(const PlayerCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCommandRequest(PlayerCommandRequest&& from) noexcept
    : PlayerCommandRequest() {
    *this = ::std::move(from);
  }

  inline PlayerCommandRequest& operator=(PlayerCommandRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCommandRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCommandRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerCommandRequest*>(
               &_PlayerCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PlayerCommandRequest* other);
  friend void swap(PlayerCommandRequest& a, PlayerCommandRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCommandRequest* New() const final {
    return CreateMaybeMessage<PlayerCommandRequest>(nullptr);
  }

  PlayerCommandRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCommandRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCommandRequest& from);
  void MergeFrom(const PlayerCommandRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlayerCommandRequest_CPixelPosition CPixelPosition;

  // accessors -------------------------------------------------------

  // repeated int32 DActors = 4;
  int dactors_size() const;
  void clear_dactors();
  static const int kDActorsFieldNumber = 4;
  ::google::protobuf::int32 dactors(int index) const;
  void set_dactors(int index, ::google::protobuf::int32 value);
  void add_dactors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dactors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dactors();

  // required .GameInfo.PlayerCommandRequest.CPixelPosition DTargetLocation = 5;
  bool has_dtargetlocation() const;
  void clear_dtargetlocation();
  static const int kDTargetLocationFieldNumber = 5;
  const ::GameInfo::PlayerCommandRequest_CPixelPosition& dtargetlocation() const;
  ::GameInfo::PlayerCommandRequest_CPixelPosition* release_dtargetlocation();
  ::GameInfo::PlayerCommandRequest_CPixelPosition* mutable_dtargetlocation();
  void set_allocated_dtargetlocation(::GameInfo::PlayerCommandRequest_CPixelPosition* dtargetlocation);

  // required int32 DAction = 1;
  bool has_daction() const;
  void clear_daction();
  static const int kDActionFieldNumber = 1;
  ::google::protobuf::int32 daction() const;
  void set_daction(::google::protobuf::int32 value);

  // required int32 DTargetNumber = 2;
  bool has_dtargetnumber() const;
  void clear_dtargetnumber();
  static const int kDTargetNumberFieldNumber = 2;
  ::google::protobuf::int32 dtargetnumber() const;
  void set_dtargetnumber(::google::protobuf::int32 value);

  // required int32 DTargetType = 3;
  bool has_dtargettype() const;
  void clear_dtargettype();
  static const int kDTargetTypeFieldNumber = 3;
  ::google::protobuf::int32 dtargettype() const;
  void set_dtargettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameInfo.PlayerCommandRequest)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dactors_;
  ::GameInfo::PlayerCommandRequest_CPixelPosition* dtargetlocation_;
  ::google::protobuf::int32 daction_;
  ::google::protobuf::int32 dtargetnumber_;
  ::google::protobuf::int32 dtargettype_;
  friend struct ::TableStruct_GameInfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerCommandRequest_CPixelPosition

// required int32 DX = 1;
inline bool PlayerCommandRequest_CPixelPosition::has_dx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCommandRequest_CPixelPosition::clear_dx() {
  dx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerCommandRequest_CPixelPosition::dx() const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.CPixelPosition.DX)
  return dx_;
}
inline void PlayerCommandRequest_CPixelPosition::set_dx(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  dx_ = value;
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.CPixelPosition.DX)
}

// required int32 DY = 2;
inline bool PlayerCommandRequest_CPixelPosition::has_dy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCommandRequest_CPixelPosition::clear_dy() {
  dy_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerCommandRequest_CPixelPosition::dy() const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.CPixelPosition.DY)
  return dy_;
}
inline void PlayerCommandRequest_CPixelPosition::set_dy(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  dy_ = value;
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.CPixelPosition.DY)
}

// -------------------------------------------------------------------

// PlayerCommandRequest

// required int32 DAction = 1;
inline bool PlayerCommandRequest::has_daction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCommandRequest::clear_daction() {
  daction_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerCommandRequest::daction() const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.DAction)
  return daction_;
}
inline void PlayerCommandRequest::set_daction(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  daction_ = value;
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.DAction)
}

// required int32 DTargetNumber = 2;
inline bool PlayerCommandRequest::has_dtargetnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCommandRequest::clear_dtargetnumber() {
  dtargetnumber_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerCommandRequest::dtargetnumber() const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.DTargetNumber)
  return dtargetnumber_;
}
inline void PlayerCommandRequest::set_dtargetnumber(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  dtargetnumber_ = value;
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.DTargetNumber)
}

// required int32 DTargetType = 3;
inline bool PlayerCommandRequest::has_dtargettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerCommandRequest::clear_dtargettype() {
  dtargettype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 PlayerCommandRequest::dtargettype() const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.DTargetType)
  return dtargettype_;
}
inline void PlayerCommandRequest::set_dtargettype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  dtargettype_ = value;
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.DTargetType)
}

// repeated int32 DActors = 4;
inline int PlayerCommandRequest::dactors_size() const {
  return dactors_.size();
}
inline void PlayerCommandRequest::clear_dactors() {
  dactors_.Clear();
}
inline ::google::protobuf::int32 PlayerCommandRequest::dactors(int index) const {
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.DActors)
  return dactors_.Get(index);
}
inline void PlayerCommandRequest::set_dactors(int index, ::google::protobuf::int32 value) {
  dactors_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameInfo.PlayerCommandRequest.DActors)
}
inline void PlayerCommandRequest::add_dactors(::google::protobuf::int32 value) {
  dactors_.Add(value);
  // @@protoc_insertion_point(field_add:GameInfo.PlayerCommandRequest.DActors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerCommandRequest::dactors() const {
  // @@protoc_insertion_point(field_list:GameInfo.PlayerCommandRequest.DActors)
  return dactors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerCommandRequest::mutable_dactors() {
  // @@protoc_insertion_point(field_mutable_list:GameInfo.PlayerCommandRequest.DActors)
  return &dactors_;
}

// required .GameInfo.PlayerCommandRequest.CPixelPosition DTargetLocation = 5;
inline bool PlayerCommandRequest::has_dtargetlocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCommandRequest::clear_dtargetlocation() {
  if (dtargetlocation_ != nullptr) dtargetlocation_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameInfo::PlayerCommandRequest_CPixelPosition& PlayerCommandRequest::dtargetlocation() const {
  const ::GameInfo::PlayerCommandRequest_CPixelPosition* p = dtargetlocation_;
  // @@protoc_insertion_point(field_get:GameInfo.PlayerCommandRequest.DTargetLocation)
  return p != nullptr ? *p : *reinterpret_cast<const ::GameInfo::PlayerCommandRequest_CPixelPosition*>(
      &::GameInfo::_PlayerCommandRequest_CPixelPosition_default_instance_);
}
inline ::GameInfo::PlayerCommandRequest_CPixelPosition* PlayerCommandRequest::release_dtargetlocation() {
  // @@protoc_insertion_point(field_release:GameInfo.PlayerCommandRequest.DTargetLocation)
  _has_bits_[0] &= ~0x00000001u;
  ::GameInfo::PlayerCommandRequest_CPixelPosition* temp = dtargetlocation_;
  dtargetlocation_ = nullptr;
  return temp;
}
inline ::GameInfo::PlayerCommandRequest_CPixelPosition* PlayerCommandRequest::mutable_dtargetlocation() {
  _has_bits_[0] |= 0x00000001u;
  if (dtargetlocation_ == nullptr) {
    auto* p = CreateMaybeMessage<::GameInfo::PlayerCommandRequest_CPixelPosition>(GetArenaNoVirtual());
    dtargetlocation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameInfo.PlayerCommandRequest.DTargetLocation)
  return dtargetlocation_;
}
inline void PlayerCommandRequest::set_allocated_dtargetlocation(::GameInfo::PlayerCommandRequest_CPixelPosition* dtargetlocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dtargetlocation_;
  }
  if (dtargetlocation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dtargetlocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtargetlocation, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dtargetlocation_ = dtargetlocation;
  // @@protoc_insertion_point(field_set_allocated:GameInfo.PlayerCommandRequest.DTargetLocation)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GameInfo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_GameInfo_2eproto
