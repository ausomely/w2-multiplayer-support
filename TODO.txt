Server:
    Hard Goals:
    1. Add ability to receive username and password from client and send them to the web server using HTTP(maybe). Create functions
       such as sending request and handling credentials and infomration and sending back authentication result back to server.
       Flow should be Client send username and password -> Our server receives, sends a HTTP request -> Web server sends back yes/no              answer -> Our Server sends the answer -> Client should move to the next session if succeeds or stay in LoginSession and try 
       sending the information again if fails.
    2. For InGameSession, Add ability to handle the commands stream the client will send to the server and store it into file(not sure)
       so that later on we can verify with the client side for correctness. Maybe send the commands stream back to the client for testing.
       (Zack)
    Soft Goals:
    1. Add other sessions such as FindGameSession, CreateGameSession, WaitInLobbySession, and InGameSession to handle the flow of                differnet states.
       (Zack)
    2. Start thinking about what information we need exchange for each of the sessions above and work on the structure of those.
       (Zack)
Client:
    Hard Goals:
    1. Convert our Client.cpp and Client.h to boost. Add needed flags in Makefile.
    2. Add functions to Client class to send command streams.(Need understanding of the source code of the game)
       (Zack)
    
    Soft Goals:
    1. Add prototype functions to do for each session according to the server. (Let the game application context and mode decide what to          do in different sessions/states of the client. No need to add Session pointer as what we did with the Server side). 
       (Zack)
    2. Create a simple/dummy flow with the network interface for multiplayer mode.
    
Documentation:
    1. Document multiplayer protocal such as what information we need to exchange throughout different states of the network interface.
    2. Document the prototypes multiplayer Game Model interface such as the one we had originally with the linux. Added more functionality
       for usability and simplicity and discuss with other platforms teams to settle on one interface.
